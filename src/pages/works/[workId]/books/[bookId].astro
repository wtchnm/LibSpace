---
export const prerender = false

import { Image } from 'astro:assets'
import { getLiveEntry } from 'astro:content'
import { setCacheHeaders } from '@/lib/utils'
import { OPEN_LIBRARY_URL } from '@/lib/books/schema'
import BookInfo from '@/components/BookInfo.astro'
import Base from '@/layouts/Base.astro'
import { actions } from 'astro:actions'
import Button from '@/components/Button.astro'
import { getShelfStatusLabel, SHELF_STATUS } from '@/lib/shelf'
import Icon from '@/components/Icon.astro'

const { workId = '', bookId = '' } = Astro.params
const { entry, error, cacheHint } = await getLiveEntry('books', {
	workId,
	bookId
})

if (error) throw error
if (!entry) return Astro.redirect('/404')
setCacheHeaders(Astro, cacheHint)

const shelf = await Astro.callAction(actions.shelf.get, { bookId })
const shelfStatusLabel = getShelfStatusLabel(shelf.data?.status)
---

<Base>
	<main
		class='flex flex-grow flex-wrap justify-center gap-8 p-8 md:items-center'
	>
		<div class='grid gap-2'>
			<Image
				width={220}
				height={320}
				src={entry.data.coverUrl}
				alt={entry.data.title}
				class='h-80 rounded-xl object-cover'
				priority
				transition:name={`cover-${entry.data.bookId}`}
			/>
			<p class='text-sm text-slate-700'>
				View full details at
				<a
					class='text-slate-500 underline'
					href={`${OPEN_LIBRARY_URL}/books/${entry.data.bookId}`}
					target='_blank'
					rel='noopener noreferrer'
				>
					OpenLibrary
				</a>
			</p>
			{
				!shelf.error && (
					<div class='mt-2 flex gap-2'>
						{Object.values(SHELF_STATUS)
							.filter(s => s !== shelf.data?.status)
							.map((status, index) => (
								<form
									method='POST'
									action={actions.shelf.upsert}
									class='w-full'
								>
									<input type='hidden' name='bookId' value={bookId} />
									<input type='hidden' name='workId' value={workId} />
									<input type='hidden' name='title' value={entry.data.title} />
									<input
										type='hidden'
										name='coverUrl'
										value={entry.data.coverUrl}
									/>
									<input type='hidden' name='status' value={status} />
									<Button
										class:list={{
											'bg-slate-500!': index === 0,
											'bg-slate-600!': index === 1
										}}
										title={`Set as ${getShelfStatusLabel(status)}`}
									>
										<Icon name={status.toLowerCase()} />
									</Button>
								</form>
							))}
						{!!shelf.data && (
							<form method='POST' action={actions.shelf.remove} class='w-full'>
								<input type='hidden' name='id' value={bookId} />
								<Button title='Remove from shelf'>
									<Icon name='remove' />
								</Button>
							</form>
						)}
					</div>
				)
			}
		</div>
		<div class='flex max-w-xl flex-col gap-2'>
			<h1 class='text-2xl font-bold text-slate-700'>{entry.data.title}</h1>
			<p class='text-slate-500'>{entry.data.authors}</p>
			<p class='text-slate-900'>{entry.data.description}</p>
			<p class='text-slate-500'>{entry.data.subjects}</p>
			<div class='mt-4 grid grid-cols-2 gap-2 md:grid-cols-3'>
				<BookInfo title='Status' value={shelfStatusLabel || 'Not in shelf'} />
				<BookInfo title='Publish date' value={entry.data.date} />
				<BookInfo title='Pages' value={entry.data.pages} />
				<BookInfo title='Publishers' value={entry.data.publishers} />
				<BookInfo title='ISBN' value={entry.data.isbn} class='col-span-2' />
			</div>
		</div>
	</main>
</Base>
